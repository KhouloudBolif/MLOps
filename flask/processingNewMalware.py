import peFile
import pickle
def Extract_File(file_path):
    # Chemin du fichier PE à analyser
    

    # Appeler la fonction d'extraction des caractéristiques spécifiques
    specific_features = peFile.extract_specific_features(file_path)

    # Afficher les caractéristiques extraites si l'extraction a réussi
    if specific_features:
        print("Caractéristiques spécifiques extraites :")
        import pprint
        pprint.pprint(specific_features)
    else:
        print("Échec de l'extraction des caractéristiques du fichier PE.")
    return specific_features
def Load_model():
    # Charger le modèle
  with open('random_forest_model.pkl', 'rb') as f:
      loaded_model = pickle.load(f)
      print("model is loaded ")
      return loaded_model


def make_prediction(features):
    # Charger le modèle
    model = Load_model()
    print([list(features.values())])
    # Faire une prédiction avec les caractéristiques fournies
    prediction = model.predict([list(features.values())])

    # Afficher la prédiction
    print("Prédiction :", prediction)
    return prediction 
if __name__ == "__main__":
    file_path = 'C:/Users/khoul/Dropbox/PC/Downloads/eclipse-java-2024-03-R-win32-x86_64/eclipse/eclipsec.exe'
    ExtractFile = Extract_File(file_path)
    
    make_prediction(ExtractFile)

